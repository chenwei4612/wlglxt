/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-05-11 02:19:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.users.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class DeptCount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>各部门人数统计 柱形图</title>\r\n");

	pageContext.setAttribute("APP_PATH", request.getContextPath());

      out.write("\r\n");
      out.write("<!-- 最新版本的 Bootstrap 核心 CSS 文件 引入样式-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.3.7-dist/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.3.7-dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/echarts.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/echarts.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/staticjs/cfgopts.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div>\r\n");
      out.write("\t<!-- 为ECharts准备一个具备大小（宽高）的Dom -->\r\n");
      out.write("    <div id=\"main\" style=\"float:left;width: 600px;height:400px;\"></div>\r\n");
      out.write("    <div id=\"main2\" style=\"float:left;width: 400px;height:400px;\"></div>\r\n");
      out.write("    <div id=\"main3\" style=\"float:left;width: 400px;height:400px;\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    var tt1=[];\r\n");
      out.write("\tvar tt2=[];\r\n");
      out.write("\tvar tt3=[];\r\n");
      out.write("\tvar tt4=[];\r\n");
      out.write("        $(function() {\r\n");
      out.write("        \t//alert(\"1111\");\r\n");
      out.write("    \t\t//去首页\r\n");
      out.write("    \t\tDepartmentN();\r\n");
      out.write("    \t\tEmSexN();\r\n");
      out.write("    \t\tEmRoleN();\r\n");
      out.write("    \t});\r\n");
      out.write("\r\n");
      out.write("    \tfunction DepartmentN() {\r\n");
      out.write("    \t\t$.ajax({\r\n");
      out.write("    \t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/deptNs\",\r\n");
      out.write("    \t\t\ttype : \"GET\",\r\n");
      out.write("    \t\t\tsuccess : function(result) {\r\n");
      out.write("    \t\t\t\t//console.log(result);\r\n");
      out.write("    \t\t\t\tbuild_emps(result)\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t}\r\n");
      out.write("    \tfunction EmSexN() {\r\n");
      out.write("    \t\t$.ajax({\r\n");
      out.write("    \t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/EmSexCount\",\r\n");
      out.write("    \t\t\ttype : \"GET\",\r\n");
      out.write("    \t\t\tsuccess : function(result) {\r\n");
      out.write("    \t\t\t\t//console.log(result);\r\n");
      out.write("    \t\t\t\tbuild_emps2(result)\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t}\r\n");
      out.write("    \tfunction EmRoleN() {\r\n");
      out.write("    \t\t$.ajax({\r\n");
      out.write("    \t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/EmRoleCount\",\r\n");
      out.write("    \t\t\ttype : \"GET\",\r\n");
      out.write("    \t\t\tsuccess : function(result) {\r\n");
      out.write("    \t\t\t\tconsole.log(result);\r\n");
      out.write("    \t\t\t\tbuild_emps3(result)\r\n");
      out.write("    \t\t\t}\r\n");
      out.write("    \t\t});\r\n");
      out.write("    \t}\r\n");
      out.write("    \tfunction build_emps(result) {\r\n");
      out.write("    \t\tvar emps = result.extend.depts;\r\n");
      out.write("\t    \t if(emps.length>0){\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < emps.length; i++) {\r\n");
      out.write("\t\t\t\t\t\t//var obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t//obj.name = emps[i].deName;\r\n");
      out.write("\t\t\t\t\t\t//obj.value = emps[i].num;\r\n");
      out.write("\t\t\t\t\t\t//tt1[i] = obj;\r\n");
      out.write("\t\t\t\t\t\ttt1[i]=emps[i].deName;\r\n");
      out.write("\t\t\t\t\t\ttt2[i]=emps[i].num;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t    \t }\r\n");
      out.write("\t    \t// 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("\t    \t\tMChart();\r\n");
      out.write("    \t}\r\n");
      out.write("    \tfunction MChart(){\r\n");
      out.write("        \t// 基于准备好的dom，初始化echarts实例\r\n");
      out.write("            var myChart = echarts.init(document.getElementById('main'));\r\n");
      out.write("            // 指定图表的配置项和数据\r\n");
      out.write("            var option = {\r\n");
      out.write("                title: {\r\n");
      out.write("                    text: '各部门人数统计 柱形图'\r\n");
      out.write("                },\r\n");
      out.write("                tooltip: {},\r\n");
      out.write("                legend: {\r\n");
      out.write("                    data:['人数']\r\n");
      out.write("                },\r\n");
      out.write("                xAxis: {\r\n");
      out.write("                \tdata: tt1\r\n");
      out.write("                },\r\n");
      out.write("                yAxis: {},\r\n");
      out.write("                series: [{\r\n");
      out.write("                    name: '人数',\r\n");
      out.write("                    type: 'bar',\r\n");
      out.write("                    data: tt2\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("         // 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("            myChart.setOption(option);\r\n");
      out.write("        }\r\n");
      out.write("    \tfunction build_emps2(result) {\r\n");
      out.write("    \t\tvar emps = result.extend.emps;\r\n");
      out.write("\t    \t if(emps.length>0){\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < emps.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\tif(emps[i].sex==0){\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"女\";\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"男\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\tobj.value = emps[i].num;\r\n");
      out.write("\t\t\t\t\t\ttt3[i] = obj;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t    \t }\r\n");
      out.write("\t    \t// 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("\t    \t\tMChart2();\r\n");
      out.write("    \t}\r\n");
      out.write("    \tfunction MChart2(){\r\n");
      out.write("    \t\t// 基于准备好的dom，初始化echarts实例\r\n");
      out.write("    \t\tvar myChart = echarts.init(document.getElementById('main2'));\r\n");
      out.write("    \t\t//饼状统计图\r\n");
      out.write("    \t\toptiontow = {\r\n");
      out.write("    \t\t    title : {\r\n");
      out.write("    \t\t        text: '员工男女',\r\n");
      out.write("    \t\t        x:'center'\r\n");
      out.write("    \t\t    },\r\n");
      out.write("    \t\t    tooltip : {\r\n");
      out.write("    \t\t        trigger: 'item',\r\n");
      out.write("    \t\t        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n");
      out.write("    \t\t    },\r\n");
      out.write("    \t\t    legend: {\r\n");
      out.write("    \t\t        orient: 'vertical',\r\n");
      out.write("    \t\t        left: 'left',\r\n");
      out.write("    \t\t        data: ['男','女']\r\n");
      out.write("    \t\t    },\r\n");
      out.write("    \t\t    series : [\r\n");
      out.write("    \t\t        {\r\n");
      out.write("    \t\t            name: '访问来源',\r\n");
      out.write("    \t\t            type: 'pie',\r\n");
      out.write("    \t\t            radius : '55%',\r\n");
      out.write("    \t\t            center: ['50%', '60%'],\r\n");
      out.write("    \t\t            data:tt3,\r\n");
      out.write("    \t\t            itemStyle: {\r\n");
      out.write("    \t\t                emphasis: {\r\n");
      out.write("    \t\t                    shadowBlur: 10,\r\n");
      out.write("    \t\t                    shadowOffsetX: 0,\r\n");
      out.write("    \t\t                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n");
      out.write("    \t\t                }\r\n");
      out.write("    \t\t            }\r\n");
      out.write("    \t\t        }\r\n");
      out.write("    \t\t    ]\r\n");
      out.write("    \t\t};\r\n");
      out.write("    \t\t// 使用刚指定 optiontow 的配置项和数据显示图表。 optiontow是上面定义的样式 ，这个样式网站在下面\r\n");
      out.write("    \t\tmyChart.setOption(optiontow);\r\n");
      out.write("        }\r\n");
      out.write("    \tfunction build_emps3(result) {\r\n");
      out.write("    \t\tvar emps = result.extend.emps;\r\n");
      out.write("    \t\tconsole.log(emps);\r\n");
      out.write("\t    \t if(emps.length>0){\r\n");
      out.write("\t\t\t\t\tfor (var i = 0; i < emps.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tvar obj = new Object();\r\n");
      out.write("\t\t\t\t\t\t if(emps[i].role==0){\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"非正式员工\";\r\n");
      out.write("\t\t\t\t\t\t}else if(emps[i].role==1){\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"信息录入员\";\r\n");
      out.write("\t\t\t\t\t\t} else if(emps[i].role==2){\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"司机\";\r\n");
      out.write("\t\t\t\t\t\t}else if(emps[i].role==3){\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"派送员\";\r\n");
      out.write("\t\t\t\t\t\t}else if(emps[i].role==4){\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"管理员\";\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tobj.name = \"经理\";\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t//obj.name=emps[i].po_name;\r\n");
      out.write("\t\t\t\t\t\tobj.value = emps[i].num;\r\n");
      out.write("\t\t\t\t\t\ttt4[i] = obj;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t    \t }\r\n");
      out.write("\t    \t// 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("\t    \t\tMChart3();\r\n");
      out.write("    \t}\r\n");
      out.write("    \tfunction MChart3(){\r\n");
      out.write("    \t\t// 基于准备好的dom，初始化echarts实例\r\n");
      out.write("    \t\tvar myChart = echarts.init(document.getElementById('main3'));\r\n");
      out.write("    \t\t //console.log(tt4);\r\n");
      out.write("    \t\t//饼状统计图\r\n");
      out.write("    \t\toptiontow = {\r\n");
      out.write("    \t\t    title : {\r\n");
      out.write("    \t\t        text: '各职位员工数量',\r\n");
      out.write("    \t\t        //subtext: '纯属虚构',\r\n");
      out.write("    \t\t        x:'center'\r\n");
      out.write("    \t\t    },\r\n");
      out.write("    \t\t    tooltip : {\r\n");
      out.write("    \t\t        trigger: 'item',\r\n");
      out.write("    \t\t        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n");
      out.write("    \t\t    },\r\n");
      out.write("    \t\t    legend: {\r\n");
      out.write("    \t\t        orient: 'vertical',\r\n");
      out.write("    \t\t        left: 'left',\r\n");
      out.write("    \t\t        data: ['非正式员工','信息录入员','司机','派送员','管理员','经理']\r\n");
      out.write("    \t\t    },\r\n");
      out.write("    \t\t    series : [\r\n");
      out.write("    \t\t        {\r\n");
      out.write("    \t\t            name: '访问来源',\r\n");
      out.write("    \t\t            type: 'pie',\r\n");
      out.write("    \t\t            radius : '55%',\r\n");
      out.write("    \t\t            center: ['50%', '60%'],\r\n");
      out.write("    \t\t            data:tt4,\r\n");
      out.write("    \t\t            itemStyle: {\r\n");
      out.write("    \t\t                emphasis: {\r\n");
      out.write("    \t\t                    shadowBlur: 10,\r\n");
      out.write("    \t\t                    shadowOffsetX: 0,\r\n");
      out.write("    \t\t                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n");
      out.write("    \t\t                }\r\n");
      out.write("    \t\t            }\r\n");
      out.write("    \t\t        }\r\n");
      out.write("    \t\t    ]\r\n");
      out.write("    \t\t};\r\n");
      out.write("    \t\t// 使用刚指定 optiontow 的配置项和数据显示图表。 optiontow是上面定义的样式 ，这个样式网站在下面\r\n");
      out.write("    \t\tmyChart.setOption(optiontow);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
