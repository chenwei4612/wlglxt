/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-05-11 02:20:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.users.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class OrderGCount_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>订单统计</title>\r\n");

	pageContext.setAttribute("APP_PATH", request.getContextPath());

      out.write("\r\n");
      out.write("<!-- 最新版本的 Bootstrap 核心 CSS 文件 引入样式-->\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.3.7-dist/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.3.7-dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/echarts.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/echarts.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/staticjs/cfgopts.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<!-- 为ECharts准备一个具备大小（宽高）的Dom -->\r\n");
      out.write("    <div id=\"chartmain\" style=\"float:left;width: 400px;height:400px;\"></div>\r\n");
      out.write("    <div id=\"chartmain2\" style=\"float:left;width: 400px;height:400px;\"></div>\r\n");
      out.write("    <div id=\"chartmain3\" style=\"float:left;width: 400px;height:400px;\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tvar tt1 = [];\r\n");
      out.write("\t\tvar tt2 = [];\r\n");
      out.write("\t\tvar tt3 = [];\r\n");
      out.write("\t\tvar tt4 = [];\r\n");
      out.write("\t\tvar tt5 = [];\r\n");
      out.write("\t\tvar tt6 = [];\r\n");
      out.write("\t\t$(function() {\r\n");
      out.write("\t\t\t//去首页\r\n");
      out.write("\t\t\tOrdCount();\r\n");
      out.write("\t\t\tOrdCount2();\r\n");
      out.write("\t\t\tOrstCount();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tfunction OrdCount() {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/OrdCount\",\r\n");
      out.write("\t\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\tconsole.log(result);\r\n");
      out.write("\t\t\t\t\tbuild_Ords(result)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction build_Ords(result) {\r\n");
      out.write("\t\t\tvar emps = result.extend.ords;\r\n");
      out.write("\t\t\tconsole.log(emps);\r\n");
      out.write("\t\t\tif (emps.length > 0) {\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < emps.length; i++) {\r\n");
      out.write("\t\t\t\t\ttt1[i] = emps[i].date;\r\n");
      out.write("\t\t\t\t\ttt2[i] = emps[i].num;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("\t\t\tMChart();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction MChart() {\r\n");
      out.write("\t\t\t//指定图标的配置和数据\r\n");
      out.write("\t\t\tvar option = {\r\n");
      out.write("\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\ttext : '以年为单位 统计订单量'\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\ttooltip : {},\r\n");
      out.write("\t\t\t\tlegend : {\r\n");
      out.write("\t\t\t\t\tdata : [ '用户来源' ]\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\txAxis : {\r\n");
      out.write("\t\t\t\t\tdata : tt1\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tyAxis : {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tseries : [ {\r\n");
      out.write("\t\t\t\t\tname : '订单量',\r\n");
      out.write("\t\t\t\t\ttype : 'line',\r\n");
      out.write("\t\t\t\t\tdata : tt2\r\n");
      out.write("\t\t\t\t} ]\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\t//初始化echarts实例\r\n");
      out.write("\t\t\tvar myChart = echarts.init(document.getElementById('chartmain'));\r\n");
      out.write("\t\t\t//使用制定的配置项和数据显示图表\r\n");
      out.write("\t\t\tmyChart.setOption(option);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction OrdCount2() {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/OrdCount2\",\r\n");
      out.write("\t\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\tconsole.log(result);\r\n");
      out.write("\t\t\t\t\tbuild_emps2(result)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction build_emps2(result) {\r\n");
      out.write("\t\t\tvar emps = result.extend.ords;\r\n");
      out.write("\t\t\tconsole.log(emps);\r\n");
      out.write("\t\t\tif (emps.length > 0) {\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < emps.length; i++) {\r\n");
      out.write("\t\t\t\t\ttt3[i] = emps[i].date;\r\n");
      out.write("\t\t\t\t\ttt4[i] = emps[i].num;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("\t\t\tMChart2();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction MChart2() {\r\n");
      out.write("\t\t\t//指定图标的配置和数据\r\n");
      out.write("\t\t\tvar option = {\r\n");
      out.write("\t\t\t\ttitle : {\r\n");
      out.write("\t\t\t\t\ttext : '以月为单位 统计订单量'\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\ttooltip : {},\r\n");
      out.write("\t\t\t\tlegend : {\r\n");
      out.write("\t\t\t\t\tdata : [ '用户来源' ]\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\txAxis : {\r\n");
      out.write("\t\t\t\t\t//data : [ \"Android\", \"IOS\", \"PC\", \"Ohter\" ]\r\n");
      out.write("\t\t\t\t\tdata : tt3\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tyAxis : {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tseries : [ {\r\n");
      out.write("\t\t\t\t\tname : '订单量',\r\n");
      out.write("\t\t\t\t\ttype : 'line',\r\n");
      out.write("\t\t\t\t\t//data : [ 500, 200, 360, 100 ]\r\n");
      out.write("\t\t\t\t\tdata : tt4\r\n");
      out.write("\t\t\t\t} ]\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\t//初始化echarts实例\r\n");
      out.write("\t\t\tvar myChart = echarts.init(document.getElementById('chartmain2'));\r\n");
      out.write("\r\n");
      out.write("\t\t\t//使用制定的配置项和数据显示图表\r\n");
      out.write("\t\t\tmyChart.setOption(option);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction OrstCount() {\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/OrstCount\",\r\n");
      out.write("\t\t\t\ttype : \"GET\",\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\tconsole.log(result);\r\n");
      out.write("\t\t\t\t\tbuild_emps3(result)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction build_emps3(result) {\r\n");
      out.write("\t\t\tvar emps = result.extend.orsts;\r\n");
      out.write("\t\t\tconsole.log(emps);\r\n");
      out.write("\t\t\tif (emps.length > 0) {\r\n");
      out.write("\t\t\t\tfor (var i = 0; i < emps.length; i++) {\r\n");
      out.write("\t\t\t\t\ttt5[i] = emps[i].roId;\r\n");
      out.write("\t\t\t\t\ttt6[i] = emps[i].num;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t// 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("\t\t\tMChart3();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction MChart3() {\r\n");
      out.write("\t\t\t// 基于准备好的dom，初始化echarts实例\r\n");
      out.write("            var myChart = echarts.init(document.getElementById('chartmain3'));\r\n");
      out.write("\r\n");
      out.write("            // 指定图表的配置项和数据\r\n");
      out.write("            var option = {\r\n");
      out.write("                title: {\r\n");
      out.write("                    text: '线路运输订单数量'\r\n");
      out.write("                },\r\n");
      out.write("                tooltip: {},\r\n");
      out.write("                legend: {\r\n");
      out.write("                    data:['数量']\r\n");
      out.write("                },\r\n");
      out.write("                xAxis: {\r\n");
      out.write("                \tdata: tt5\r\n");
      out.write("                },\r\n");
      out.write("                yAxis: {},\r\n");
      out.write("                series: [{\r\n");
      out.write("                    name: '数量',\r\n");
      out.write("                    type: 'bar',\r\n");
      out.write("                    data: tt6\r\n");
      out.write("                }]\r\n");
      out.write("            };\r\n");
      out.write("         // 使用刚指定的配置项和数据显示图表。\r\n");
      out.write("            myChart.setOption(option);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
